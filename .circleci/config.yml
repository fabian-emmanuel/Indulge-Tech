# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:17.0.3 # ...with this image as the primary container; this is where all `steps` will run

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # store the version denoted by the POM onto the env
      - run: mkdir -p target
      - run: mvn dependency:go-offline
      - run: mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -Ev '(^\[|Download)' > target/version.txt

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Build artifacts
          command: |
            mvn package -Dspring.profiles.active=test
      - run:
          name: Create application source bundle
          command: |
            zip -r source_bundle.zip target/fellowship-0.0.1-SNAPSHOT.jar .platform Procfile
      - persist_to_workspace:
          root: ~/repo
          paths:
            - target/version.txt #this is inside target dir inside work-dir
            - source_bundle.zip  #this is inside work-dir

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  workflow:
    jobs:
      - build
